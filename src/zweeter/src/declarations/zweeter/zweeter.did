type User = 
 record {
   id: text;
   name: text;
 };
type Tweet = 
 record {
   content: text;
   id: text;
   liked: int;
   postedAt: int;
   user: text;
   userid: text;
 };
type LikedUserTweet = 
 record {
   tweetid: text;
   userid: text;
 };
service : {
  _constructTweetId: (principal, text) -> (text);
  _constructTweetIdByText: (text, text) -> (text);
  _getTweetById: (text) -> (opt Tweet) query;
  _listTweets: (opt text) -> (vec record {
                                    text;
                                    Tweet;
                                  }) query;
  delTweet: (text) -> ();
  delUser: () -> ();
  dislikeTweet: (text, text) -> ();
  getTweet: (text) -> (opt Tweet);
  getUser: () -> (opt User);
  getUserById: (text) -> (opt User) query;
  likeTweet: (text, text) -> ();
  listAllTweets: () -> (vec record {
                              text;
                              Tweet;
                            });
  listMyLikedTweets: () -> (vec record {
                                  text;
                                  LikedUserTweet;
                                });
  listMyTweets: () -> (vec record {
                             text;
                             Tweet;
                           });
  setTweet: (text, Tweet) -> ();
  setUser: (User) -> ();
}
